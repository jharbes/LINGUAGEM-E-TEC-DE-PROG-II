!SESSION 2022-01-30 20:56:27.081 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-30 20:56:44.128
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-30 20:56:44.129
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@79e2606f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@734cf881,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-30 20:56:44.129
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4a890fdd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@56299b0e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-30 20:56:49.107
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\mathe'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-30 21:52:46.488 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-30 21:52:59.733
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-30 21:52:59.733
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@77ce8bc5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2fcc5f49,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-30 21:52:59.733
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@28e48b65,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6cde0c69,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-30 21:53:05.219
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\mathe'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-01-31 10:37:40.000 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-31 10:37:55.294
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-31 10:37:55.294
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@24f177f5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@65e05005,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-31 10:37:55.294
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6ed691fd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1efcba00,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-31 10:38:00.923
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\mathe'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 11:47:03.679
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static double life_BadFish=1, life_MadCat=1, life_MegaBob=1;		// INIMIGOS
	public static void main(String[] args) {
		double SuperBark = 0.1, EyeBeam = 0.30, RearRocket = 0.45;	// PODERES
		Scanner ler = new Scanner(System.in);
		int poder;
		
		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		//try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		do(life_BadFish>0.1){
			mostra_tela(1);
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish -= 0.1;
					break;
			}
		}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - 1ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		switch(fase) {
			case 1:primeira_fase();
				break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
		
	}
	
	public static void primeira_fase() {
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",life_BadFish*100);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-----------------------------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",life_MadCat*100);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",life_MegaBob*100);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1760)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3025)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-01-31 11:47:03.687
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1760)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3025)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-01-31 11:47:03.689
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1760)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3025)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:209)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 11:47:09.250
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static double life_BadFish=1, life_MadCat=1, life_MegaBob=1;		// INIMIGOS
	public static void main(String[] args) {
		double SuperBark = 0.1, EyeBeam = 0.30, RearRocket = 0.45;	// PODERES
		Scanner ler = new Scanner(System.in);
		int poder;
		
		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		//try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		do(life_BadFish>0.1){
			mostra_tela(1);
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish -= 0.1;
					break;
			}
		}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - 1ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		switch(fase) {
			case 1:primeira_fase();
				break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
		
	}
	
	public static void primeira_fase() {
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",life_BadFish*100);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-----------------------------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",life_MadCat*100);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",life_MegaBob*100);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1760)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3025)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1280)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1059)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1111)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1107)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1536)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4875)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4753)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 11:47:09.256
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1760)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3025)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1280)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1059)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1111)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1107)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1536)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4875)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4753)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 11:47:09.260
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1760)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3025)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor60.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1280)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1059)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1111)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1107)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1536)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4875)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4753)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 11:47:11.228
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static double life_BadFish=1, life_MadCat=1, life_MegaBob=1;		// INIMIGOS
	public static void main(String[] args) {
		double SuperBark = 0.1, EyeBeam = 0.30, RearRocket = 0.45;	// PODERES
		Scanner ler = new Scanner(System.in);
		int poder;
		
		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		//try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		do{
			mostra_tela(1);
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish -= 0.1;
					break;
			}
		}(life_BadFish>0.1)
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - 1ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		switch(fase) {
			case 1:primeira_fase();
				break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
		
	}
	
	public static void primeira_fase() {
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",life_BadFish*100);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-----------------------------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",life_MadCat*100);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",life_MegaBob*100);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-01-31 11:47:11.232
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-01-31 11:47:11.235
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.eclemma.core 4 5013 2022-01-31 14:43:12.993
!MESSAGE Error while dumping coverage data (code 5013).
!STACK 0
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:323)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:961)
	at java.base/java.io.FilterInputStream.read(FilterInputStream.java:82)
	at org.jacoco.core.data.ExecutionDataReader.read(ExecutionDataReader.java:84)
	at org.eclipse.eclemma.internal.core.MemoryExecutionDataSource.readFrom(MemoryExecutionDataSource.java:69)
	at org.eclipse.eclemma.internal.core.launching.AgentServer.run(AgentServer.java:115)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2022-01-31 14:43:31.796 -----------------------------------------------
eclipse.buildId=4.22.0.I20211124-1800
java.version=17.0.1
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2022-01-31 14:43:49.781
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-31 14:43:49.781
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5c41b8d8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@77ea960f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-01-31 14:43:49.781
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5f166f2e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1ef93e01,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2022-01-31 14:43:57.098
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\mathe'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:06.582
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		_/﹋\_
		(҂`_´)
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-----------------------------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-01-31 14:58:06.588
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-01-31 14:58:06.590
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:06.630
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		_/﹋\_
		(҂`_´)
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-----------------------------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:06.632
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:06.633
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:08.817
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		_/﹋\_
		(҂`_´)
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-----------------------------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:08.821
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:08.823
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:10.694
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		_/﹋\_
		(҂`_´)
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-----------------------------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:10.697
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:10.699
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:12.646
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		_/﹋\_
		(҂`_´)
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-----------------------------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1280)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1059)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1111)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1107)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1536)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4875)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4753)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:12.651
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1280)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1059)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1111)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1107)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1536)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4875)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4753)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:12.654
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1280)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1059)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1111)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1107)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1536)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4875)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4753)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:13.650
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		(҂`_´)
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-----------------------------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-01-31 14:58:13.654
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-01-31 14:58:13.657
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:13.705
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		(҂`_´)
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-----------------------------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:13.707
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:13.708
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:14.463
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		(҂`_´)
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-----------------------------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:14.466
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:14.468
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:16.993
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		(҂`_´)
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-----------------------------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:16.996
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:16.999
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:19.206
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		(҂`_´)
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-01-31 14:58:19.210
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-01-31 14:58:19.212
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:19.333
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		(҂`_´)
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:19.337
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:19.339
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:21.996
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		(҂`_´)
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:21.998
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:21.999
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:22.458
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		(҂`_´)
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1280)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1059)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1111)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1107)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1536)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4875)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4753)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:22.461
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1280)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1059)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1111)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1107)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1536)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4875)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4753)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:22.462
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1280)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1059)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1111)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1107)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1536)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4875)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4753)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:23.245
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-01-31 14:58:23.247
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-01-31 14:58:23.249
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:23.273
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:23.276
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:23.277
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:24.539
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:24.542
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:24.544
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:25.295
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("---------(҂`_´)---------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-01-31 14:58:25.299
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-01-31 14:58:25.301
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:25.580
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("---------(҂`_´)---------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:25.585
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:25.588
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:26.019
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("---------(҂`_´)---------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:26.023
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:26.025
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:27.589
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("---------(҂`_´)---------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:27.593
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:27.595
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:27.892
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("---------(҂`_´)---------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:27.894
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:27.896
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:28.844
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("--------- (҂`_´)---------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-01-31 14:58:28.849
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-01-31 14:58:28.852
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:28.893
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("--------- (҂`_´)---------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:28.898
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:28.900
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:30.395
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("---------(҂`_´)---------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-01-31 14:58:30.399
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-01-31 14:58:30.401
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:30.439
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("---------(҂`_´)---------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:30.443
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:30.446
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:187)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:32.435
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------- (҂`_´)---------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-01-31 14:58:32.438
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-01-31 14:58:32.440
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:32.655
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("---------_/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------- (҂`_´)---------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:32.658
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:32.660
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:33.974
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-------- _/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------- (҂`_´)---------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-01-31 14:58:33.976
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-01-31 14:58:33.978
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:36.253
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-------- _/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------- (҂`_´)---------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:36.258
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:36.260
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:38.013
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-------- _/﹋\\_----------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------- (҂`_´) --------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-01-31 14:58:38.016
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-01-31 14:58:38.017
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:40.052
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-------- _/﹋\\_ ---------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------- (҂`_´) --------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-01-31 14:58:40.056
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-01-31 14:58:40.057
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:40.129
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-------- _/﹋\\_ ---------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------- (҂`_´) --------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:40.133
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:40.135
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:41.714
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-------- _/﹋\\_ ---------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------- (҂`_´) --------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:41.717
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:41.719
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:41.807
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-------- _/﹋\\_ ---------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------- (҂`_´) --------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:41.809
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:41.810
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:42.594
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-------- _/﹋\\_ ---------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------- (҂`_´)  -------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2022-01-31 14:58:42.597
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2022-01-31 14:58:42.599
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:46.226
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-------- _/﹋\\_ ---------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------- (҂`_´)  -------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:46.229
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:46.231
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-01-31 14:58:46.656
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package controller;

import java.util.Scanner;

public class Controller {
	
	static float life_BadFish=1, life_MadCat=1, life_MegaBob=1;	// INIMIGOS
	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner ler = new Scanner(System.in);
		int poder;

		instrucoes();
		System.out.println("\nO jogo começará em 10 segundos.");
		try { Thread.sleep (10000); } catch (InterruptedException ex) {}
		
		mostra_tela(1);
		while(life_BadFish>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano ");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_BadFish = (float) (life_BadFish - 0.1);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}			
			mostra_tela(1);
		}
		
		mudanca_de_fase(2); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(2);
		while(life_MadCat>0){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MadCat = (float) (life_MadCat - 0.1);
					break;
				case 2:
					life_MadCat = (float) (life_MadCat - 0.3);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			mostra_tela(2);
		}
		
		mudanca_de_fase(3); // EXIBE MENSAGEM DE MUDANÇA DE FASE
		
		mostra_tela(3);
		while(life_MegaBob>0.1){
			System.out.println("\nPoderes: [1] SuperBark - 10% de dano [2] EyeBeam - 30% de dano [3] EyeBeam - 50% de dano");
			System.out.printf("Informe o poder que deseja usar: ");
			poder = ler.nextInt();
			
			switch(poder){
				case 1:
					life_MegaBob = (float) (life_MegaBob - 0.1);
					break;
				case 2:
					life_MegaBob = (float) (life_MegaBob - 0.3);
					break;
				case 3:
					life_MegaBob = (float) (life_MegaBob - 0.5);
					break;
				default:
					System.out.println("\nOPÇÃO INVÁLIDA.");
					try { Thread.sleep (2000); } catch (InterruptedException ex) {}
					break;
			}
			if(life_MegaBob>0.1)
				mostra_tela(3);
			else
				mensagem_fimdejogo();
		}
	}
	
	public static void mensagem_fimdejogo(){
		System.out.println("\n*********************************************");
		System.out.println("* PARABÉNS, VOCÊ DERROTOU  OS TRÊS INIMIGOS *");
		System.out.println(
				"\n.............................................\n"+
				"........(....\\.................../....)......\r\n"
				+ ".........\\....\\................ /..../.......\r\n"
				+ "..........\\....\\.............../..../........\r\n"
				+ "...........\\..../´¯.|.¯`\\./.../..............\r\n"
				+ ".........../... |....|.... (¯ `\\.............\r\n"
				+ "..........|.....|´¯.|´¯.|\\....\\..............\r\n"
				+ "..........\\......` ¯..¯ ´......•.............\r\n"
				+ "...........\\_ ............ _.•...............");
		System.out.println("\n*********************************************");
	}
	
	public static void mudanca_de_fase(int fase) {
		System.out.println("\n*******************************");
		System.out.println("* PARABÉNS, INIMIGO DERROTADO *");
		System.out.println("*     VAMOS PARA A "+fase+"ª FASE    *");
		System.out.println("*******************************");
		try { Thread.sleep (2000); } catch (InterruptedException ex) {}
	}
	
	public static void instrucoes() {
		System.out.println("\n*************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE **********************************");
		System.out.println("*************************************************************************************************\n");
		System.out.println("INSTRUÇÕES: ");
		System.out.println("1 - O jogo tem três fases.");
		System.out.println("2 - A cada fase você ganha um poder diferente.");
		System.out.println("3 - Em cada uma das fases você enfrentará um inimigo diferente.");
		System.out.println("4 - Na primeira fase você tem apenas um poder.");
	}
	
	public static void mostra_tela(int fase) {
		System.out.println("\n***********************************************************************************************************");
		System.out.println("********************************** BEM VINDO AO JOGO SuperKATE - "+fase+"ª FASE **********************************");
		System.out.println("***********************************************************************************************************\n");
		
		switch(fase){
			case 1:primeira_fase();
			break;
			case 2:segunda_fase();
			break;
			case 3:terceira_fase();
			break;
		}
	}
	
	public static void primeira_fase() {
		float aux;
		if(life_BadFish>0) aux = life_BadFish*100;
		else aux = 0;
		
		
		
		<,︻╦╤─ ҉ - -
		_/﹋\_
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- BadFish - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------(o)__(o)----------------------");
		System.out.println("-------- _/﹋\\_ ---------------------------------------------------------(__  __) ---------------------");
		System.out.println("-------- (҂`_´)  -------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("--------------------------------------------------------------------------------)(-------------------------");
		System.out.println("-------------------------------------------------------------------------------(  )------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void segunda_fase() {
		float aux;
		if(life_MadCat>0) aux = life_MadCat*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("-------------------------------------------------------------------------- MadCat - %.0f%% -----------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("------------------------------------------------------------------------------W  W ------------------------");
		System.out.println("---------------------------------------------------------------------------- (O)(O) -----------------------");
		System.out.println("-------------------------------------------------------------------------------||--------------------------");
		System.out.println("------------------------------------------------------------------------------ | \\-------------------------");
		System.out.println("------------------------------------------------------------------------------ |  `.-----------------------");
		System.out.println("------------------------------------------------------------------------------(.-.__)----------------------");
		System.out.println("-------------------------------------------------------------------------------`-' ------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
	
	public static void terceira_fase(){
		float aux;
		if(life_MegaBob>0) aux = life_MegaBob*100;
		else aux = 0;
		
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.printf("------------------------------------------------------------------------- MegaBob - %.0f%% ------------------\n",aux);
		System.out.println("-----------------------------------------------------------------------------------------------------------");
		System.out.println("---------------------------------------------------------------------------(O))  ((O)----------------------");
		System.out.println("----------------------------------------------------------------------------||    ||-----------------------");
		System.out.println("--------------------------------------------------------------------------- || /\\ ||-----------------------");
		System.out.println("----------------------------------------------------------------------------||//\\\\||-----------------------");
		System.out.println("----------------------------------------------------------------------------/ /  \\ \\-----------------------");
		System.out.println("---------------------------------------------------------------------------( /    \\ )----------------------");
		System.out.println("----------------------------------------------------------------------------)      (-----------------------");
		System.out.println("--------------------------------------------------------------------------- (      ) ----------------------");
		System.out.println("-----------------------------------------------------------------------------\\    /------------------------");
		System.out.println("------------------------------------------------------------------------------\\  /-------------------------");
		System.out.println("-------------------------------------------------------------------------------OO--------------------------");
		System.out.println("-----------------------------------------------------------------------------------------------------------");
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1280)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1059)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1111)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1107)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1536)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4875)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4753)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-01-31 14:58:46.658
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1280)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1059)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1111)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1107)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1536)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4875)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4753)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-01-31 14:58:46.659
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:487)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1280)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1059)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1084)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1069)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1111)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1107)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1536)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4875)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4753)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5002)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3630)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1154)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1045)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
